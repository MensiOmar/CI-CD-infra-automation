---
# tasks file for generate-ssh-key
- name: create mount folder for jenkins home
  file: 
    path: "{{jenkins_dir}}{{ ssh_key_path }}"
    state: directory
    mode: '0755'
    owner: 1000
    group: 1000
- name: Generate SSH key pair
  community.crypto.openssh_keypair:
    path: "{{jenkins_dir}}{{ ssh_key_path }}/{{ssh_key_name}}"
    type: ed25519
    size: 2048
  register: ssh_key
- name: Get the initial admin password for Jenkins
  shell: cat "{{jenkins_dir}}{{ ssh_key_path }}/{{ssh_key_name}}"
  register: private_key
- name: Set a variable with properly formatted private key
  set_fact:
    ssh_private_key_escaped: "{{ private_key.stdout | regex_replace('\n', '\\n') | regex_replace('\"', '\\\"') }}"
# - name: Display public key
#   ansible.builtin.debug:
#     msg: "{{ private_key.stdout }}"
- name: Set a variable
  set_fact:
    ssh_public_key: "{{ ssh_key.public_key }}"
    ssh_private_key: "{{ private_key.stdout }}"
  delegate_to: "{{agent_host}}"
- name: Setting master using a variable to hold a more complicate script
  ansible.builtin.set_fact:
    add_jenkins_agent_ssh_credencials_script: |
        import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
        import com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey.DirectEntryPrivateKeySource
        import com.cloudbees.plugins.credentials.*
        import com.cloudbees.plugins.credentials.domains.*
        import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl

        //String privateKeyText = new File('/ssh-keys/{{ssh_key_name}}').text
        DirectEntryPrivateKeySource privateKeySource = new DirectEntryPrivateKeySource("{{ssh_private_key_escaped}}")
        Credentials privateKeyCredential = new BasicSSHUserPrivateKey(
          CredentialsScope.GLOBAL,     // scope
          'slave-private-key', // id
          jenkins,                    // username
          privateKeySource,            // private key source
          '',                          // passphrase
          'slave SSH key'         // description
        )
        SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), privateKeyCredential)

- name: add ssh agent credentials to jenkins master
  community.general.jenkins_script:
    script: "{{add_jenkins_agent_ssh_credencials_script}}"
    user: "{{jenkins_user}}"
    password: "{{jenkins_password}}"
    url: "{{jenkins_url}}"
    validate_certs: false